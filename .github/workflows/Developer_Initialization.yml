name: Deploy to EKS

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

env:
  ECR_REPOSITORY: developerecr
  EKS_CLUSTER_NAME: acmecorp-developer
  AWS_REGION: us-east-2
  AWS_ACCESS_KEY_ID: AKIARVJ335YWVCRX6VH3
  AWS_SECRET_ACCESS_KEY: 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

jobs:
  build:
    name: Deployment
    runs-on: ubuntu-latest

    steps:

      - name: Set short git commit SHA
        id: commit
        uses: prompt/actions-commit-hash@v3

      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Build with Gradle
        run: ./gradlew build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{env.AWS_REGION}}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2


      - name: Build, tag, and push docker image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          #        REGISTRY_ALIAS: cicd-demo-registry-alias
          #        REPOSITORY: cicd-demo
          IMAGE_TAG: ${{ steps.commit.outputs.short }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f Dockerfile .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG